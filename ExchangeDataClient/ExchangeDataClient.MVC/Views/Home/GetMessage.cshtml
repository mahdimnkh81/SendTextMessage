@using ExchangeData.BLL.Models
@using Kendo.Mvc.UI
@using Kendo.Mvc.UI.Html
@model MessageModel

@{
    long a = 4;
}

@{
    ViewBag.Title = "جستجوی پیام ";
}
<style>

    .searchText p {
        text-align: right;
        padding-left: 20px;
    }

    .searchText {
        padding-top: 20px;
        padding-bottom: 50px;
        display: flex;
        flex-direction: row-reverse;
        justify-content: flex-start;
        align-items: center;
        align-content: center;
    }
</style>
<h2><center>@ViewBag.Title</center></h2>

<div>
    @*<form action=@Url.Action("Contact","Home") method="post">
            <label for="id">شناسه:</label>
            <input type="number" id="id" name="id" placeholder="شناسه خود را وارد کنید"><br><br>
            <input type="submit" value="Submit">
        </form>*@

    @using (Html.BeginForm("GetMessage", "Home"))
    {
        <div class="searchText">
            @*<legend> شناسه مورد نظر را وارد کنید</legend>*@
            <p style="font-family:verdana"><b>: شناسه مورد نظر را وارد کنید</b></p>

            @*@Html.LabelFor(parent => parent.Id, "شناسه")*@
            @Html.EditorFor(parent => parent.Id)
        </div>

        @(Html.Kendo().Grid<MessageModel>()
            .Name("Grid").Columns(columns =>
            {
                 columns.Bound(p => p.Id).Width(140).Sortable(false).Title("شناسه");
                 columns.Bound(p => p.Name).Width(140).Title("نام");
                 columns.Bound(p => p.PhoneNumber).Width(140).Title("موبایل");
                 columns.Bound(p => p.Email).Width(140).Title("ایمیل");
                 columns.Bound(p => p.MessageHeading).Width(140).Title("عنوان پیام");
                 columns.Bound(p => p.Message).Width(140).Title("پیام");
            }).Sortable(sortable => sortable
                            .AllowUnsort(true)
                            .SortMode(GridSortMode.MultipleColumn)
                            .ShowIndexes(true))
                            .ColumnMenu()
                            .Scrollable()
                            .Filterable()
                            .Resizable(e => e.Columns(true))
                            .DataSource(dataSource => dataSource.Ajax().Read(read => read.Action("GetData", "Home", new { caseFileId = ViewBag.id })))
        )
        <input type="submit" value="جستجو" />

    }

</div>






