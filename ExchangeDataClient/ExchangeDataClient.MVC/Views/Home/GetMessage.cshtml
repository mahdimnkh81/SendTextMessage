@using ExchangeData.BLL.Models
@using Kendo.Mvc.UI
@using Kendo.Mvc.UI.Html
@model MessageModel

@{
    long a = 4;
}

@{
    ViewBag.Title = "جستجوی پیام ";
}
<p class="message">جستجوی پیام</p>

<div class="grid k-rtl">
    @using (Html.BeginForm("GetMessage", "Home"))
    {
        <div class="searchText">
            @*<legend> شناسه مورد نظر را وارد کنید</legend>*@
            <p class="textSearch"> شناسه مورد نظر را وارد کنید</p>

            @*@Html.LabelFor(parent => parent.Id, "شناسه")*@
            @Html.EditorFor(parent => parent.Id)
        </div>

        @(Html.Kendo().Grid<MessageModel>()
            .Name("Grid").Columns(columns =>
            {
                
                columns.Bound(p => p.Id).Width(140).Sortable(false).Title("شناسه");
                columns.Bound(p => p.Name).Width(140).Title("نام");
                columns.Bound(p => p.PhoneNumber).Width(140).Title("موبایل");
                columns.Bound(p => p.Email).Width(140).Title("ایمیل");
                columns.Bound(p => p.MessageHeading).Width(140).Title("عنوان پیام");
                columns.Bound(p => p.Message).Width(140).Title("پیام");
            }).Sortable(sortable => sortable
                            .AllowUnsort(true)
                            .SortMode(GridSortMode.MultipleColumn)
                            .ShowIndexes(true))
                            .ColumnMenu()
                            .Scrollable()
                            .Filterable()
                            .Resizable(e => e.Columns(true))
                            .DataSource(dataSource => dataSource.Ajax().Read(read => read.Action("GetData", "Home", new { caseFileId = ViewBag.id })))
        )
        <input type="submit" class="k-button k-insert" value="جستجو" />

    }

</div>
<style>
    .grid {
        padding-right: 150px;
        direction : rtl;
    }

    .searchText p {
        text-align: right;
        padding-left: 20px;
    }

    .searchText {
        padding-top: 20px;
        padding-bottom: 50px;
        display: flex;
        flex-direction: row-reverse;
        justify-content: flex-start;
        align-items: center;
        align-content: center;
        direction:ltr;
    }

    .message {
        direction: rtl;
        padding-right: 1050px;
        font-size: 50px;
        color: darkred;
    }

    .textSearch {
        direction: rtl;
        font-size: 20px;
        color: darkred;
    }

    input#Id {
        border-color: darkred;
    }

    .k-button {
        width: 100px;
        background: darkgrey;
    }

       ul#menu1 {
        display: flex;
        flex-direction: column;
        align-content: center;
        align-items: center;
        justify-content: center;
        border: solid 1px #ccc;
    }

    .menu {
        float: left;
        display: block;
        width: 190px;
        min-height: 138px;
        margin: 10px;
        line-height: 1.5em;
        position: absolute;
        right: 0;
        width: 100px;
        height: 120px;
        padding-top: 60px;
    }

    .k-widget.k-menu-horizontal > .k-item {
        border-style: unset;
        border-width: unset;
    }

    .k-menu .k-item > .k-link {
        display: block;
        padding: 0em !important;
    }

    .item-menu {
        padding: 40px
    }

    li.k-item.item-menu.k-state-highlight.k-state-default {
        padding: 50px 39px;
    }
        .k-rtl {
    direction: rtl;
    position: absolute;
    margin: 0;
    padding-top: inherit;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-content: stretch;
    margin-right: 500px;
    margin-left: 400px;
    justify-content: center;

}
</style>



